{"version":3,"file":"index-umd.min.js","sources":["../src/jsonpath.js"],"sourcesContent":["/* eslint-disable no-eval, jsdoc/check-types */\n\n// Todo: Reenable jsdoc/check-types once PR merged: https://github.com/gajus/eslint-plugin-jsdoc/pull/270\nconst globalEval = eval;\n// Only Node.JS has a process variable that is of [[Class]] process\nconst supportsNodeVM = function () {\n    try {\n        return Object.prototype.toString.call(global.process) === '[object process]';\n    } catch (e) {\n        return false;\n    }\n};\nconst allowedResultTypes = ['value', 'path', 'pointer', 'parent', 'parentProperty', 'all'];\nconst {hasOwnProperty: hasOwnProp} = Object.prototype;\n\n/**\n* @typedef {null|boolean|number|string|PlainObject|GenericArray} JSONObject\n*/\n\n/**\n* @callback ConditionCallback\n* @param item\n* @returns {boolean}\n*/\n\n/**\n * Copy items out of one array into another.\n * @param {Array} source Array with items to copy\n * @param {Array} target Array to which to copy\n * @param {ConditionCallback} conditionCb Callback passed the current item; will move\n *     item if evaluates to `true`\n * @returns {undefined}\n */\nconst moveToAnotherArray = function (source, target, conditionCb) {\n    const il = source.length;\n    for (let i = 0; i < il; i++) {\n        const item = source[i];\n        if (conditionCb(item)) {\n            target.push(source.splice(i--, 1)[0]);\n        }\n    }\n};\n\nconst vm = supportsNodeVM()\n    ? require('vm')\n    : {\n        /**\n         * @param {string} expr Expression to evaluate\n         * @param {PlainObject} context Object whose items will be added to evaluation\n         * @returns {Any} Result of evaluated code\n         */\n        runInNewContext (expr, context) {\n            const keys = Object.keys(context);\n            const funcs = [];\n            moveToAnotherArray(keys, funcs, (key) => {\n                return typeof context[key] === 'function';\n            });\n            const code = funcs.reduce((s, func) => {\n                let fString = context[func].toString();\n                if (!(/function/).exec(fString)) {\n                    fString = 'function ' + fString;\n                }\n                return 'var ' + func + '=' + fString + ';' + s;\n            }, '') + keys.reduce((s, vr) => {\n                return 'var ' + vr + '=' + JSON.stringify(context[vr]).replace(\n                    // http://www.thespanner.co.uk/2011/07/25/the-json-specification-is-now-wrong/\n                    /\\u2028|\\u2029/g, (m) => {\n                        return '\\\\u202' + (m === '\\u2028' ? '8' : '9');\n                    }\n                ) + ';' + s;\n            }, expr);\n            return globalEval(code);\n        }\n    };\n\n/**\n * Copies array and then pushes item into it.\n * @param {Array} arr Array to copy and into which to push\n * @param {Any} item Array item to add (to end)\n * @returns {Array} Copy of the original array\n */\nfunction push (arr, item) {\n    arr = arr.slice();\n    arr.push(item);\n    return arr;\n}\n/**\n * Copies array and then unshifts item into it.\n * @param {Any} item Array item to add (to beginning)\n * @param {Array} arr Array to copy and into which to unshift\n * @returns {Array} Copy of the original array\n */\nfunction unshift (item, arr) {\n    arr = arr.slice();\n    arr.unshift(item);\n    return arr;\n}\n\n/**\n * Caught when JSONPath is used without `new` but rethrown if with `new`\n * @extends Error\n */\nclass NewError extends Error {\n    /**\n     * @param {Any} value The evaluated scalar value\n     */\n    constructor (value) {\n        super('JSONPath should not be called with \"new\" (it prevents return of (unwrapped) scalar values)');\n        this.avoidNew = true;\n        this.value = value;\n        this.name = 'NewError';\n    }\n}\n\n/**\n* @typedef {PlainObject} ReturnObject\n* @property {string} path\n* @property {JSONObject} value\n* @property {PlainObject|GenericArray} parent\n* @property {string} parentProperty\n*/\n\n/**\n* @callback JSONPathCallback\n* @param {string|PlainObject} preferredOutput\n* @param {\"value\"|\"property\"} type\n* @param {ReturnObject} fullRetObj\n*/\n\n/**\n* @callback OtherTypeCallback\n* @param {JSONObject} val\n* @param {string} path\n* @param {PlainObject|GenericArray} parent\n* @param {string} parentPropName\n*/\n\n/**\n * @param {PlainObject} [opts] If present, must be an object\n * @param {string} expr JSON path to evaluate\n * @param {JSON} obj JSON object to evaluate against\n * @param {JSONPathCallback} callback Passed 3 arguments: 1) desired payload per `resultType`,\n *     2) `\"value\"|\"property\"`, 3) Full returned object with all payloads\n * @param {OtherTypeCallback} otherTypeCallback If `@other()` is at the end of one's query, this\n *  will be invoked with the value of the item, its path, its parent, and its parent's\n *  property name, and it should return a boolean indicating whether the supplied value\n *  belongs to the \"other\" type or not (or it may handle transformations and return `false`).\n * @returns {JSONPath}\n * @class\n */\nfunction JSONPath (opts, expr, obj, callback, otherTypeCallback) {\n    // eslint-disable-next-line no-restricted-syntax\n    if (!(this instanceof JSONPath)) {\n        try {\n            return new JSONPath(opts, expr, obj, callback, otherTypeCallback);\n        } catch (e) {\n            if (!e.avoidNew) {\n                throw e;\n            }\n            return e.value;\n        }\n    }\n\n    if (typeof opts === 'string') {\n        otherTypeCallback = callback;\n        callback = obj;\n        obj = expr;\n        expr = opts;\n        opts = {};\n    }\n    opts = opts || {};\n    const objArgs = hasOwnProp.call(opts, 'json') && hasOwnProp.call(opts, 'path');\n    this.json = opts.json || obj;\n    this.path = opts.path || expr;\n    this.resultType = (opts.resultType && opts.resultType.toLowerCase()) || 'value';\n    this.flatten = opts.flatten || false;\n    this.wrap = hasOwnProp.call(opts, 'wrap') ? opts.wrap : true;\n    this.sandbox = opts.sandbox || {};\n    this.preventEval = opts.preventEval || false;\n    this.parent = opts.parent || null;\n    this.parentProperty = opts.parentProperty || null;\n    this.callback = opts.callback || callback || null;\n    this.otherTypeCallback = opts.otherTypeCallback || otherTypeCallback || function () {\n        throw new Error('You must supply an otherTypeCallback callback option with the @other() operator.');\n    };\n\n    if (opts.autostart !== false) {\n        const ret = this.evaluate({\n            path: (objArgs ? opts.path : expr),\n            json: (objArgs ? opts.json : obj)\n        });\n        if (!ret || typeof ret !== 'object') {\n            throw new NewError(ret);\n        }\n        return ret;\n    }\n}\n\n// PUBLIC METHODS\nJSONPath.prototype.evaluate = function (expr, json, callback, otherTypeCallback) {\n    const that = this;\n    let currParent = this.parent,\n        currParentProperty = this.parentProperty;\n    let {flatten, wrap} = this;\n\n    this.currResultType = this.resultType;\n    this.currPreventEval = this.preventEval;\n    this.currSandbox = this.sandbox;\n    callback = callback || this.callback;\n    this.currOtherTypeCallback = otherTypeCallback || this.otherTypeCallback;\n\n    json = json || this.json;\n    expr = expr || this.path;\n    if (expr && typeof expr === 'object') {\n        if (!expr.path) {\n            throw new Error('You must supply a \"path\" property when providing an object argument to JSONPath.evaluate().');\n        }\n        json = hasOwnProp.call(expr, 'json') ? expr.json : json;\n        flatten = hasOwnProp.call(expr, 'flatten') ? expr.flatten : flatten;\n        this.currResultType = hasOwnProp.call(expr, 'resultType') ? expr.resultType : this.currResultType;\n        this.currSandbox = hasOwnProp.call(expr, 'sandbox') ? expr.sandbox : this.currSandbox;\n        wrap = hasOwnProp.call(expr, 'wrap') ? expr.wrap : wrap;\n        this.currPreventEval = hasOwnProp.call(expr, 'preventEval') ? expr.preventEval : this.currPreventEval;\n        callback = hasOwnProp.call(expr, 'callback') ? expr.callback : callback;\n        this.currOtherTypeCallback = hasOwnProp.call(expr, 'otherTypeCallback') ? expr.otherTypeCallback : this.currOtherTypeCallback;\n        currParent = hasOwnProp.call(expr, 'parent') ? expr.parent : currParent;\n        currParentProperty = hasOwnProp.call(expr, 'parentProperty') ? expr.parentProperty : currParentProperty;\n        expr = expr.path;\n    }\n    currParent = currParent || null;\n    currParentProperty = currParentProperty || null;\n\n    if (Array.isArray(expr)) {\n        expr = JSONPath.toPathString(expr);\n    }\n    if (!expr || !json || !allowedResultTypes.includes(this.currResultType)) {\n        return undefined;\n    }\n    this._obj = json;\n\n    const exprList = JSONPath.toPathArray(expr);\n    if (exprList[0] === '$' && exprList.length > 1) { exprList.shift(); }\n    this._hasParentSelector = null;\n    const result = this\n        ._trace(exprList, json, ['$'], currParent, currParentProperty, callback)\n        .filter(function (ea) { return ea && !ea.isParentSelector; });\n\n    if (!result.length) { return wrap ? [] : undefined; }\n    if (result.length === 1 && !wrap && !Array.isArray(result[0].value)) {\n        return this._getPreferredOutput(result[0]);\n    }\n    return result.reduce(function (rslt, ea) {\n        const valOrPath = that._getPreferredOutput(ea);\n        if (flatten && Array.isArray(valOrPath)) {\n            rslt = rslt.concat(valOrPath);\n        } else {\n            rslt.push(valOrPath);\n        }\n        return rslt;\n    }, []);\n};\n\n// PRIVATE METHODS\n\nJSONPath.prototype._getPreferredOutput = function (ea) {\n    const resultType = this.currResultType;\n    switch (resultType) {\n    default:\n        throw new TypeError('Unknown result type');\n    case 'all':\n        ea.pointer = JSONPath.toPointer(ea.path);\n        ea.path = typeof ea.path === 'string' ? ea.path : JSONPath.toPathString(ea.path);\n        return ea;\n    case 'value': case 'parent': case 'parentProperty':\n        return ea[resultType];\n    case 'path':\n        return JSONPath.toPathString(ea[resultType]);\n    case 'pointer':\n        return JSONPath.toPointer(ea.path);\n    }\n};\n\nJSONPath.prototype._handleCallback = function (fullRetObj, callback, type) {\n    if (callback) {\n        const preferredOutput = this._getPreferredOutput(fullRetObj);\n        fullRetObj.path = typeof fullRetObj.path === 'string'\n            ? fullRetObj.path\n            : JSONPath.toPathString(fullRetObj.path);\n        // eslint-disable-next-line callback-return\n        callback(preferredOutput, type, fullRetObj);\n    }\n};\n\n/**\n *\n * @param {string} expr\n * @param {JSONObject} val\n * @param {string} path\n * @param {PlainObject|GenericArray} parent\n * @param {string} parentPropName\n * @param {JSONPathCallback} callback\n * @param {boolean} literalPriority\n * @returns {ReturnObject|ReturnObject[]}\n */\nJSONPath.prototype._trace = function (\n    expr, val, path, parent, parentPropName, callback, literalPriority\n) {\n    // No expr to follow? return path and value as the result of this trace branch\n    let retObj;\n    const that = this;\n    if (!expr.length) {\n        retObj = {path, value: val, parent, parentProperty: parentPropName};\n        this._handleCallback(retObj, callback, 'value');\n        return retObj;\n    }\n\n    const loc = expr[0], x = expr.slice(1);\n\n    // We need to gather the return value of recursive trace calls in order to\n    // do the parent sel computation.\n    const ret = [];\n    /**\n     *\n     * @param {ReturnObject|ReturnObject[]} elems\n     * @returns {void}\n     */\n    function addRet (elems) {\n        if (Array.isArray(elems)) {\n            // This was causing excessive stack size in Node (with or without Babel) against our performance test: `ret.push(...elems);`\n            elems.forEach((t) => {\n                ret.push(t);\n            });\n        } else {\n            ret.push(elems);\n        }\n    }\n\n    if ((typeof loc !== 'string' || literalPriority) && val &&\n        hasOwnProp.call(val, loc)\n    ) { // simple case--directly follow property\n        addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback));\n    } else if (loc === '*') { // all child properties\n        // eslint-disable-next-line no-shadow\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\n            addRet(that._trace(unshift(m, x), v, p, par, pr, cb, true));\n        });\n    } else if (loc === '..') { // all descendent parent properties\n        addRet(this._trace(x, val, path, parent, parentPropName, callback)); // Check remaining expression with val's immediate children\n        // eslint-disable-next-line no-shadow\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\n            // We don't join m and x here because we only want parents, not scalar values\n            if (typeof v[m] === 'object') { // Keep going with recursive descent on val's object children\n                addRet(that._trace(unshift(l, x), v[m], push(p, m), v, m, cb));\n            }\n        });\n    // The parent sel computation is handled in the frame above using the\n    // ancestor object of val\n    } else if (loc === '^') {\n        // This is not a final endpoint, so we do not invoke the callback here\n        this._hasParentSelector = true;\n        return path.length\n            ? {\n                path: path.slice(0, -1),\n                expr: x,\n                isParentSelector: true\n            }\n            : [];\n    } else if (loc === '~') { // property name\n        retObj = {path: push(path, loc), value: parentPropName, parent, parentProperty: null};\n        this._handleCallback(retObj, callback, 'property');\n        return retObj;\n    } else if (loc === '$') { // root only\n        addRet(this._trace(x, val, path, null, null, callback));\n    } else if ((/^(-?\\d*):(-?\\d*):?(\\d*)$/).test(loc)) { // [start:end:step]  Python slice syntax\n        addRet(this._slice(loc, x, val, path, parent, parentPropName, callback));\n    } else if (loc.indexOf('?(') === 0) { // [?(expr)] (filtering)\n        if (this.currPreventEval) {\n            throw new Error('Eval [?(expr)] prevented in JSONPath expression.');\n        }\n        // eslint-disable-next-line no-shadow\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\n            if (that._eval(l.replace(/^\\?\\((.*?)\\)$/, '$1'), v[m], m, p, par, pr)) {\n                addRet(that._trace(unshift(m, x), v, p, par, pr, cb));\n            }\n        });\n    } else if (loc[0] === '(') { // [(expr)] (dynamic property/index)\n        if (this.currPreventEval) {\n            throw new Error('Eval [(expr)] prevented in JSONPath expression.');\n        }\n        // As this will resolve to a property name (but we don't know it yet), property and parent information is relative to the parent of the property to which this expression will resolve\n        addRet(this._trace(unshift(\n            this._eval(loc, val, path[path.length - 1], path.slice(0, -1), parent, parentPropName),\n            x\n        ), val, path, parent, parentPropName, callback));\n    } else if (loc[0] === '@') { // value type: @boolean(), etc.\n        let addType = false;\n        const valueType = loc.slice(1, -2);\n        switch (valueType) {\n        default:\n            throw new TypeError('Unknown value type ' + valueType);\n        case 'scalar':\n            if (!val || !(['object', 'function'].includes(typeof val))) {\n                addType = true;\n            }\n            break;\n        case 'boolean': case 'string': case 'undefined': case 'function':\n            if (typeof val === valueType) { // eslint-disable-line valid-typeof\n                addType = true;\n            }\n            break;\n        case 'number':\n            if (typeof val === valueType && isFinite(val)) { // eslint-disable-line valid-typeof\n                addType = true;\n            }\n            break;\n        case 'nonFinite':\n            if (typeof val === 'number' && !isFinite(val)) {\n                addType = true;\n            }\n            break;\n        case 'object':\n            if (val && typeof val === valueType) { // eslint-disable-line valid-typeof\n                addType = true;\n            }\n            break;\n        case 'array':\n            if (Array.isArray(val)) {\n                addType = true;\n            }\n            break;\n        case 'other':\n            addType = this.currOtherTypeCallback(val, path, parent, parentPropName);\n            break;\n        case 'integer':\n            if (val === Number(val) && isFinite(val) && !(val % 1)) {\n                addType = true;\n            }\n            break;\n        case 'null':\n            if (val === null) {\n                addType = true;\n            }\n            break;\n        }\n        if (addType) {\n            retObj = {path, value: val, parent, parentProperty: parentPropName};\n            this._handleCallback(retObj, callback, 'value');\n            return retObj;\n        }\n    } else if (loc[0] === '`' && val && hasOwnProp.call(val, loc.slice(1))) { // `-escaped property\n        const locProp = loc.slice(1);\n        addRet(this._trace(x, val[locProp], push(path, locProp), val, locProp, callback, true));\n    } else if (loc.includes(',')) { // [name1,name2,...]\n        const parts = loc.split(',');\n        for (const part of parts) {\n            addRet(this._trace(unshift(part, x), val, path, parent, parentPropName, callback));\n        }\n    } else if (!literalPriority && val && hasOwnProp.call(val, loc)) { // simple case--directly follow property\n        addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, true));\n    }\n\n    // We check the resulting values for parent selections. For parent\n    // selections we discard the value object and continue the trace with the\n    // current val object\n    if (this._hasParentSelector) {\n        for (let t = 0; t < ret.length; t++) {\n            const rett = ret[t];\n            if (rett.isParentSelector) {\n                const tmp = that._trace(\n                    rett.expr, val, rett.path, parent, parentPropName, callback\n                );\n                if (Array.isArray(tmp)) {\n                    ret[t] = tmp[0];\n                    const tl = tmp.length;\n                    for (let tt = 1; tt < tl; tt++) {\n                        t++;\n                        ret.splice(t, 0, tmp[tt]);\n                    }\n                } else {\n                    ret[t] = tmp;\n                }\n            }\n        }\n    }\n    return ret;\n};\n\nJSONPath.prototype._walk = function (loc, expr, val, path, parent, parentPropName, callback, f) {\n    if (Array.isArray(val)) {\n        const n = val.length;\n        for (let i = 0; i < n; i++) {\n            f(i, loc, expr, val, path, parent, parentPropName, callback);\n        }\n    } else if (typeof val === 'object') {\n        for (const m in val) {\n            if (hasOwnProp.call(val, m)) {\n                f(m, loc, expr, val, path, parent, parentPropName, callback);\n            }\n        }\n    }\n};\n\nJSONPath.prototype._slice = function (loc, expr, val, path, parent, parentPropName, callback) {\n    if (!Array.isArray(val)) { return undefined; }\n    const len = val.length, parts = loc.split(':'),\n        step = (parts[2] && parseInt(parts[2])) || 1;\n    let start = (parts[0] && parseInt(parts[0])) || 0,\n        end = (parts[1] && parseInt(parts[1])) || len;\n    start = (start < 0) ? Math.max(0, start + len) : Math.min(len, start);\n    end = (end < 0) ? Math.max(0, end + len) : Math.min(len, end);\n    const ret = [];\n    for (let i = start; i < end; i += step) {\n        const tmp = this._trace(unshift(i, expr), val, path, parent, parentPropName, callback);\n        if (Array.isArray(tmp)) {\n            // This was causing excessive stack size in Node (with or without Babel) against our performance test: `ret.push(...tmp);`\n            tmp.forEach((t) => {\n                ret.push(t);\n            });\n        } else {\n            ret.push(tmp);\n        }\n    }\n    return ret;\n};\n\nJSONPath.prototype._eval = function (code, _v, _vname, path, parent, parentPropName) {\n    if (!this._obj || !_v) { return false; }\n    if (code.includes('@parentProperty')) {\n        this.currSandbox._$_parentProperty = parentPropName;\n        code = code.replace(/@parentProperty/g, '_$_parentProperty');\n    }\n    if (code.includes('@parent')) {\n        this.currSandbox._$_parent = parent;\n        code = code.replace(/@parent/g, '_$_parent');\n    }\n    if (code.includes('@property')) {\n        this.currSandbox._$_property = _vname;\n        code = code.replace(/@property/g, '_$_property');\n    }\n    if (code.includes('@path')) {\n        this.currSandbox._$_path = JSONPath.toPathString(path.concat([_vname]));\n        code = code.replace(/@path/g, '_$_path');\n    }\n    if (code.match(/@([.\\s)[])/)) {\n        this.currSandbox._$_v = _v;\n        code = code.replace(/@([.\\s)[])/g, '_$_v$1');\n    }\n    try {\n        return vm.runInNewContext(code, this.currSandbox);\n    } catch (e) {\n        // eslint-disable-next-line no-console\n        console.log(e);\n        throw new Error('jsonPath: ' + e.message + ': ' + code);\n    }\n};\n\n// PUBLIC CLASS PROPERTIES AND METHODS\n\n// Could store the cache object itself\nJSONPath.cache = {};\n\n/**\n * @param {string[]} pathArr Array to convert\n * @returns {string} The path string\n */\nJSONPath.toPathString = function (pathArr) {\n    const x = pathArr, n = x.length;\n    let p = '$';\n    for (let i = 1; i < n; i++) {\n        if (!(/^(~|\\^|@.*?\\(\\))$/).test(x[i])) {\n            p += (/^[0-9*]+$/).test(x[i]) ? ('[' + x[i] + ']') : (\"['\" + x[i] + \"']\");\n        }\n    }\n    return p;\n};\n\n/**\n * @param {string} pointer JSON Path\n * @returns {string} JSON Pointer\n */\nJSONPath.toPointer = function (pointer) {\n    const x = pointer, n = x.length;\n    let p = '';\n    for (let i = 1; i < n; i++) {\n        if (!(/^(~|\\^|@.*?\\(\\))$/).test(x[i])) {\n            p += '/' + x[i].toString()\n                .replace(/~/g, '~0')\n                .replace(/\\//g, '~1');\n        }\n    }\n    return p;\n};\n\n/**\n * @param {string} expr Expression to convert\n * @returns {string[]}\n */\nJSONPath.toPathArray = function (expr) {\n    const {cache} = JSONPath;\n    if (cache[expr]) { return cache[expr].concat(); }\n    const subx = [];\n    const normalized = expr\n        // Properties\n        .replace(\n            /@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\\(\\)/g,\n            ';$&;'\n        )\n        // Parenthetical evaluations (filtering and otherwise), directly\n        //   within brackets or single quotes\n        .replace(/[['](\\??\\(.*?\\))[\\]']/g, function ($0, $1) {\n            return '[#' + (subx.push($1) - 1) + ']';\n        })\n        // Escape periods and tildes within properties\n        .replace(/\\['([^'\\]]*)'\\]/g, function ($0, prop) {\n            return \"['\" + prop\n                .replace(/\\./g, '%@%')\n                .replace(/~/g, '%%@@%%') +\n                \"']\";\n        })\n        // Properties operator\n        .replace(/~/g, ';~;')\n        // Split by property boundaries\n        .replace(/'?\\.'?(?![^[]*\\])|\\['?/g, ';')\n        // Reinsert periods within properties\n        .replace(/%@%/g, '.')\n        // Reinsert tildes within properties\n        .replace(/%%@@%%/g, '~')\n        // Parent\n        .replace(/(?:;)?(\\^+)(?:;)?/g, function ($0, ups) {\n            return ';' + ups.split('').join(';') + ';';\n        })\n        // Descendents\n        .replace(/;;;|;;/g, ';..;')\n        // Remove trailing\n        .replace(/;$|'?\\]|'$/g, '');\n\n    const exprList = normalized.split(';').map(function (exp) {\n        const match = exp.match(/#(\\d+)/);\n        return !match || !match[1] ? exp : subx[match[1]];\n    });\n    cache[expr] = exprList;\n    return cache[expr];\n};\n\nexport {JSONPath};\n"],"names":["globalEval","eval","allowedResultTypes","hasOwnProp","Object","prototype","hasOwnProperty","vm","toString","call","global","process","e","supportsNodeVM","require","runInNewContext","expr","context","keys","funcs","source","target","conditionCb","il","length","i","push","splice","moveToAnotherArray","key","code","reduce","s","func","fString","exec","vr","JSON","stringify","replace","m","arr","item","slice","unshift","NewError","value","avoidNew","name","Error","JSONPath","opts","obj","callback","otherTypeCallback","this","objArgs","json","path","resultType","toLowerCase","flatten","wrap","sandbox","preventEval","parent","parentProperty","autostart","ret","evaluate","_typeof","that","currParent","currParentProperty","currResultType","currPreventEval","currSandbox","currOtherTypeCallback","Array","isArray","toPathString","includes","_obj","exprList","toPathArray","shift","_hasParentSelector","result","_trace","filter","ea","isParentSelector","rslt","valOrPath","_getPreferredOutput","concat","undefined","TypeError","pointer","toPointer","_handleCallback","fullRetObj","type","preferredOutput","val","parentPropName","literalPriority","retObj","loc","x","addRet","elems","forEach","t","_walk","l","v","p","par","pr","cb","test","_slice","indexOf","_eval","addType","valueType","isFinite","Number","locProp","parts","split","part","rett","tmp","tl","tt","f","n","len","step","parseInt","start","end","Math","max","min","_v","_vname","_$_parentProperty","_$_parent","_$_property","_$_path","match","_$_v","console","log","message","cache","pathArr","subx","$0","$1","prop","ups","join","map","exp"],"mappings":"2uDAGA,IAAMA,EAAaC,KASbC,EAAqB,CAAC,QAAS,OAAQ,UAAW,SAAU,iBAAkB,OAC7DC,EAAcC,OAAOC,UAArCC,eA8BDC,EAtCiB,qBAE2C,qBAAnDH,OAAOC,UAAUG,SAASC,KAAKC,OAAOC,SAC/C,MAAOC,UACE,GAkCJC,GACLC,QAAQ,MACR,CAMEC,yBAAiBC,EAAMC,OACbC,EAAOd,OAAOc,KAAKD,GACnBE,EAAQ,IApBC,SAAUC,EAAQC,EAAQC,WAC3CC,EAAKH,EAAOI,OACTC,EAAI,EAAGA,EAAIF,EAAIE,IAEhBH,EADSF,EAAOK,KAEhBJ,EAAOK,KAAKN,EAAOO,OAAOF,IAAK,GAAG,IAgBlCG,CAAmBV,EAAMC,EAAO,SAACU,SACE,mBAAjBZ,EAAQY,SAEpBC,EAAOX,EAAMY,OAAO,SAACC,EAAGC,OACtBC,EAAUjB,EAAQgB,GAAMzB,iBACtB,WAAY2B,KAAKD,KACnBA,EAAU,YAAcA,GAErB,OAASD,EAAO,IAAMC,EAAU,IAAMF,GAC9C,IAAMd,EAAKa,OAAO,SAACC,EAAGI,SACd,OAASA,EAAK,IAAMC,KAAKC,UAAUrB,EAAQmB,IAAKG,yBAEjC,SAACC,SACR,UAAkB,WAANA,EAAiB,IAAM,OAE9C,IAAMR,GACXhB,UACIhB,EAAW8B,KAU9B,SAASJ,EAAMe,EAAKC,UAChBD,EAAMA,EAAIE,SACNjB,KAAKgB,GACFD,EAQX,SAASG,EAASF,EAAMD,UACpBA,EAAMA,EAAIE,SACNC,QAAQF,GACLD,MAOLI,yBAIWC,8IACH,gGACDC,UAAW,IACXD,MAAQA,IACRE,KAAO,2PARGC,aAgDvB,SAASC,EAAUC,EAAMnC,EAAMoC,EAAKC,EAAUC,QAEpCC,gBAAgBL,cAEP,IAAIA,EAASC,EAAMnC,EAAMoC,EAAKC,EAAUC,GACjD,MAAO1C,OACAA,EAAEmC,eACGnC,SAEHA,EAAEkC,MAIG,iBAATK,IACPG,EAAoBD,EACpBA,EAAWD,EACXA,EAAMpC,EACNA,EAAOmC,EACPA,EAAO,IAEXA,EAAOA,GAAQ,OACTK,EAAUrD,EAAWM,KAAK0C,EAAM,SAAWhD,EAAWM,KAAK0C,EAAM,gBAClEM,KAAON,EAAKM,MAAQL,OACpBM,KAAOP,EAAKO,MAAQ1C,OACpB2C,WAAcR,EAAKQ,YAAcR,EAAKQ,WAAWC,eAAkB,aACnEC,QAAUV,EAAKU,UAAW,OAC1BC,MAAO3D,EAAWM,KAAK0C,EAAM,SAAUA,EAAKW,UAC5CC,QAAUZ,EAAKY,SAAW,QAC1BC,YAAcb,EAAKa,cAAe,OAClCC,OAASd,EAAKc,QAAU,UACxBC,eAAiBf,EAAKe,gBAAkB,UACxCb,SAAWF,EAAKE,UAAYA,GAAY,UACxCC,kBAAoBH,EAAKG,mBAAqBA,GAAqB,iBAC9D,IAAIL,MAAM,sFAGG,IAAnBE,EAAKgB,UAAqB,KACpBC,EAAMb,KAAKc,SAAS,CACtBX,KAAOF,EAAUL,EAAKO,KAAO1C,EAC7ByC,KAAOD,EAAUL,EAAKM,KAAOL,QAE5BgB,GAAsB,WAAfE,EAAOF,SACT,IAAIvB,EAASuB,UAEhBA,GAKflB,EAAS7C,UAAUgE,SAAW,SAAUrD,EAAMyC,EAAMJ,EAAUC,OACpDiB,EAAOhB,KACTiB,EAAajB,KAAKU,OAClBQ,EAAqBlB,KAAKW,eACzBL,EAAiBN,KAAjBM,QAASC,EAAQP,KAARO,aAETY,eAAiBnB,KAAKI,gBACtBgB,gBAAkBpB,KAAKS,iBACvBY,YAAcrB,KAAKQ,QACxBV,EAAWA,GAAYE,KAAKF,cACvBwB,sBAAwBvB,GAAqBC,KAAKD,kBAEvDG,EAAOA,GAAQF,KAAKE,MACpBzC,EAAOA,GAAQuC,KAAKG,OACQ,WAAhBY,EAAOtD,GAAmB,KAC7BA,EAAK0C,WACA,IAAIT,MAAM,+FAEpBQ,EAAOtD,EAAWM,KAAKO,EAAM,QAAUA,EAAKyC,KAAOA,EACnDI,EAAU1D,EAAWM,KAAKO,EAAM,WAAaA,EAAK6C,QAAUA,OACvDa,eAAiBvE,EAAWM,KAAKO,EAAM,cAAgBA,EAAK2C,WAAaJ,KAAKmB,oBAC9EE,YAAczE,EAAWM,KAAKO,EAAM,WAAaA,EAAK+C,QAAUR,KAAKqB,YAC1Ed,EAAO3D,EAAWM,KAAKO,EAAM,QAAUA,EAAK8C,KAAOA,OAC9Ca,gBAAkBxE,EAAWM,KAAKO,EAAM,eAAiBA,EAAKgD,YAAcT,KAAKoB,gBACtFtB,EAAWlD,EAAWM,KAAKO,EAAM,YAAcA,EAAKqC,SAAWA,OAC1DwB,sBAAwB1E,EAAWM,KAAKO,EAAM,qBAAuBA,EAAKsC,kBAAoBC,KAAKsB,sBACxGL,EAAarE,EAAWM,KAAKO,EAAM,UAAYA,EAAKiD,OAASO,EAC7DC,EAAqBtE,EAAWM,KAAKO,EAAM,kBAAoBA,EAAKkD,eAAiBO,EACrFzD,EAAOA,EAAK0C,QAEhBc,EAAaA,GAAc,KAC3BC,EAAqBA,GAAsB,KAEvCK,MAAMC,QAAQ/D,KACdA,EAAOkC,EAAS8B,aAAahE,IAE5BA,GAASyC,GAASvD,EAAmB+E,SAAS1B,KAAKmB,sBAGnDQ,KAAOzB,MAEN0B,EAAWjC,EAASkC,YAAYpE,GAClB,MAAhBmE,EAAS,IAAcA,EAAS3D,OAAS,GAAK2D,EAASE,aACtDC,mBAAqB,SACpBC,EAAShC,KACViC,OAAOL,EAAU1B,EAAM,CAAC,KAAMe,EAAYC,EAAoBpB,GAC9DoC,OAAO,SAAUC,UAAaA,IAAOA,EAAGC,0BAExCJ,EAAO/D,OACU,IAAlB+D,EAAO/D,QAAiBsC,GAASgB,MAAMC,QAAQQ,EAAO,GAAGzC,OAGtDyC,EAAOxD,OAAO,SAAU6D,EAAMF,OAC3BG,EAAYtB,EAAKuB,oBAAoBJ,UACvC7B,GAAWiB,MAAMC,QAAQc,GACzBD,EAAOA,EAAKG,OAAOF,GAEnBD,EAAKlE,KAAKmE,GAEPD,GACR,IAVQrC,KAAKuC,oBAAoBP,EAAO,IAFdzB,EAAO,QAAKkC,IAiB7C9C,EAAS7C,UAAUyF,oBAAsB,SAAUJ,OACzC/B,EAAaJ,KAAKmB,sBAChBf,iBAEE,IAAIsC,UAAU,2BACnB,aACDP,EAAGQ,QAAUhD,EAASiD,UAAUT,EAAGhC,MACnCgC,EAAGhC,KAA0B,iBAAZgC,EAAGhC,KAAoBgC,EAAGhC,KAAOR,EAAS8B,aAAaU,EAAGhC,MACpEgC,MACN,YAAc,aAAe,wBACvBA,EAAG/B,OACT,cACMT,EAAS8B,aAAaU,EAAG/B,QAC/B,iBACMT,EAASiD,UAAUT,EAAGhC,QAIrCR,EAAS7C,UAAU+F,gBAAkB,SAAUC,EAAYhD,EAAUiD,MAC7DjD,EAAU,KACJkD,EAAkBhD,KAAKuC,oBAAoBO,GACjDA,EAAW3C,KAAkC,iBAApB2C,EAAW3C,KAC9B2C,EAAW3C,KACXR,EAAS8B,aAAaqB,EAAW3C,MAEvCL,EAASkD,EAAiBD,EAAMD,KAexCnD,EAAS7C,UAAUmF,OAAS,SACxBxE,EAAMwF,EAAK9C,EAAMO,EAAQwC,EAAgBpD,EAAUqD,OAG/CC,EACEpC,EAAOhB,SACRvC,EAAKQ,cACNmF,EAAS,CAACjD,KAAAA,EAAMZ,MAAO0D,EAAKvC,OAAAA,EAAQC,eAAgBuC,QAC/CL,gBAAgBO,EAAQtD,EAAU,SAChCsD,MAGLC,EAAM5F,EAAK,GAAI6F,EAAI7F,EAAK2B,MAAM,GAI9ByB,EAAM,YAMH0C,EAAQC,GACTjC,MAAMC,QAAQgC,GAEdA,EAAMC,QAAQ,SAACC,GACX7C,EAAI1C,KAAKuF,KAGb7C,EAAI1C,KAAKqF,OAIG,iBAARH,GAAoBF,IAAoBF,GAChDrG,EAAWM,KAAK+F,EAAKI,GAErBE,EAAOvD,KAAKiC,OAAOqB,EAAGL,EAAII,GAAMlF,EAAKgC,EAAMkD,GAAMJ,EAAKI,EAAKvD,SACxD,GAAY,MAARuD,OAEFM,MAAMN,EAAKC,EAAGL,EAAK9C,EAAMO,EAAQwC,EAAgBpD,EAAU,SAAUb,EAAG2E,EAAGN,EAAGO,EAAGC,EAAGC,EAAKC,EAAIC,GAC9FV,EAAOvC,EAAKiB,OAAO5C,EAAQJ,EAAGqE,GAAIO,EAAGC,EAAGC,EAAKC,EAAIC,GAAI,WAEtD,GAAY,OAARZ,EACPE,EAAOvD,KAAKiC,OAAOqB,EAAGL,EAAK9C,EAAMO,EAAQwC,EAAgBpD,SAEpD6D,MAAMN,EAAKC,EAAGL,EAAK9C,EAAMO,EAAQwC,EAAgBpD,EAAU,SAAUb,EAAG2E,EAAGN,EAAGO,EAAGC,EAAGC,EAAKC,EAAIC,GAE1E,WAAhBlD,EAAO8C,EAAE5E,KACTsE,EAAOvC,EAAKiB,OAAO5C,EAAQuE,EAAGN,GAAIO,EAAE5E,GAAId,EAAK2F,EAAG7E,GAAI4E,EAAG5E,EAAGgF,UAK/D,CAAA,GAAY,MAARZ,cAEFtB,oBAAqB,EACnB5B,EAAKlC,OACN,CACEkC,KAAMA,EAAKf,MAAM,GAAI,GACrB3B,KAAM6F,EACNlB,kBAAkB,GAEpB,GACH,GAAY,MAARiB,SACPD,EAAS,CAACjD,KAAMhC,EAAKgC,EAAMkD,GAAM9D,MAAO2D,EAAgBxC,OAAAA,EAAQC,eAAgB,WAC3EkC,gBAAgBO,EAAQtD,EAAU,YAChCsD,EACJ,GAAY,MAARC,EACPE,EAAOvD,KAAKiC,OAAOqB,EAAGL,EAAK9C,EAAM,KAAM,KAAML,SAC1C,GAAK,2BAA4BoE,KAAKb,GACzCE,EAAOvD,KAAKmE,OAAOd,EAAKC,EAAGL,EAAK9C,EAAMO,EAAQwC,EAAgBpD,SAC3D,GAA0B,IAAtBuD,EAAIe,QAAQ,MAAa,IAC5BpE,KAAKoB,sBACC,IAAI1B,MAAM,yDAGfiE,MAAMN,EAAKC,EAAGL,EAAK9C,EAAMO,EAAQwC,EAAgBpD,EAAU,SAAUb,EAAG2E,EAAGN,EAAGO,EAAGC,EAAGC,EAAKC,EAAIC,GAC1FjD,EAAKqD,MAAMT,EAAE5E,QAAQ,gBAAiB,MAAO6E,EAAE5E,GAAIA,EAAG6E,EAAGC,EAAKC,IAC9DT,EAAOvC,EAAKiB,OAAO5C,EAAQJ,EAAGqE,GAAIO,EAAGC,EAAGC,EAAKC,EAAIC,WAGtD,GAAe,MAAXZ,EAAI,GAAY,IACnBrD,KAAKoB,sBACC,IAAI1B,MAAM,mDAGpB6D,EAAOvD,KAAKiC,OAAO5C,EACfW,KAAKqE,MAAMhB,EAAKJ,EAAK9C,EAAKA,EAAKlC,OAAS,GAAIkC,EAAKf,MAAM,GAAI,GAAIsB,EAAQwC,GACvEI,GACDL,EAAK9C,EAAMO,EAAQwC,EAAgBpD,SACnC,GAAe,MAAXuD,EAAI,GAAY,KACnBiB,GAAU,EACRC,EAAYlB,EAAIjE,MAAM,GAAI,UACxBmF,iBAEE,IAAI7B,UAAU,sBAAwB6B,OAC3C,SACItB,GAAS,CAAC,SAAU,YAAYvB,WAAgBuB,MACjDqB,GAAU,aAGb,cAAgB,aAAe,gBAAkB,WAC9CvD,EAAOkC,KAAQsB,IACfD,GAAU,aAGb,SACGvD,EAAOkC,KAAQsB,GAAaC,SAASvB,KACrCqB,GAAU,aAGb,YACkB,iBAARrB,GAAqBuB,SAASvB,KACrCqB,GAAU,aAGb,SACGrB,GAAOlC,EAAOkC,KAAQsB,IACtBD,GAAU,aAGb,QACG/C,MAAMC,QAAQyB,KACdqB,GAAU,aAGb,QACDA,EAAUtE,KAAKsB,sBAAsB2B,EAAK9C,EAAMO,EAAQwC,aAEvD,UACGD,IAAQwB,OAAOxB,KAAQuB,SAASvB,IAAUA,EAAM,IAChDqB,GAAU,aAGb,OACW,OAARrB,IACAqB,GAAU,MAIdA,SACAlB,EAAS,CAACjD,KAAAA,EAAMZ,MAAO0D,EAAKvC,OAAAA,EAAQC,eAAgBuC,QAC/CL,gBAAgBO,EAAQtD,EAAU,SAChCsD,OAER,GAAe,MAAXC,EAAI,IAAcJ,GAAOrG,EAAWM,KAAK+F,EAAKI,EAAIjE,MAAM,IAAK,KAC9DsF,EAAUrB,EAAIjE,MAAM,GAC1BmE,EAAOvD,KAAKiC,OAAOqB,EAAGL,EAAIyB,GAAUvG,EAAKgC,EAAMuE,GAAUzB,EAAKyB,EAAS5E,GAAU,SAC9E,GAAIuD,EAAI3B,SAAS,KAAM,KACpBiD,EAAQtB,EAAIuB,MAAM,wCACLD,iDAAO,KAAfE,UACPtB,EAAOvD,KAAKiC,OAAO5C,EAAQwF,EAAMvB,GAAIL,EAAK9C,EAAMO,EAAQwC,EAAgBpD,6FAEpEqD,GAAmBF,GAAOrG,EAAWM,KAAK+F,EAAKI,IACvDE,EAAOvD,KAAKiC,OAAOqB,EAAGL,EAAII,GAAMlF,EAAKgC,EAAMkD,GAAMJ,EAAKI,EAAKvD,GAAU,OAMrEE,KAAK+B,uBACA,IAAI2B,EAAI,EAAGA,EAAI7C,EAAI5C,OAAQyF,IAAK,KAC3BoB,EAAOjE,EAAI6C,MACboB,EAAK1C,iBAAkB,KACjB2C,EAAM/D,EAAKiB,OACb6C,EAAKrH,KAAMwF,EAAK6B,EAAK3E,KAAMO,EAAQwC,EAAgBpD,MAEnDyB,MAAMC,QAAQuD,GAAM,CACpBlE,EAAI6C,GAAKqB,EAAI,WACPC,EAAKD,EAAI9G,OACNgH,EAAK,EAAGA,EAAKD,EAAIC,IACtBvB,IACA7C,EAAIzC,OAAOsF,EAAG,EAAGqB,EAAIE,SAGzBpE,EAAI6C,GAAKqB,UAKlBlE,GAGXlB,EAAS7C,UAAU6G,MAAQ,SAAUN,EAAK5F,EAAMwF,EAAK9C,EAAMO,EAAQwC,EAAgBpD,EAAUoF,MACrF3D,MAAMC,QAAQyB,WACRkC,EAAIlC,EAAIhF,OACLC,EAAI,EAAGA,EAAIiH,EAAGjH,IACnBgH,EAAEhH,EAAGmF,EAAK5F,EAAMwF,EAAK9C,EAAMO,EAAQwC,EAAgBpD,QAEpD,GAAmB,WAAfiB,EAAOkC,OACT,IAAMhE,KAAKgE,EACRrG,EAAWM,KAAK+F,EAAKhE,IACrBiG,EAAEjG,EAAGoE,EAAK5F,EAAMwF,EAAK9C,EAAMO,EAAQwC,EAAgBpD,IAMnEH,EAAS7C,UAAUqH,OAAS,SAAUd,EAAK5F,EAAMwF,EAAK9C,EAAMO,EAAQwC,EAAgBpD,MAC3EyB,MAAMC,QAAQyB,QACbmC,EAAMnC,EAAIhF,OAAQ0G,EAAQtB,EAAIuB,MAAM,KACtCS,EAAQV,EAAM,IAAMW,SAASX,EAAM,KAAQ,EAC3CY,EAASZ,EAAM,IAAMW,SAASX,EAAM,KAAQ,EAC5Ca,EAAOb,EAAM,IAAMW,SAASX,EAAM,KAAQS,EAC9CG,EAASA,EAAQ,EAAKE,KAAKC,IAAI,EAAGH,EAAQH,GAAOK,KAAKE,IAAIP,EAAKG,GAC/DC,EAAOA,EAAM,EAAKC,KAAKC,IAAI,EAAGF,EAAMJ,GAAOK,KAAKE,IAAIP,EAAKI,WACnD3E,EAAM,GACH3C,EAAIqH,EAAOrH,EAAIsH,EAAKtH,GAAKmH,EAAM,KAC9BN,EAAM/E,KAAKiC,OAAO5C,EAAQnB,EAAGT,GAAOwF,EAAK9C,EAAMO,EAAQwC,EAAgBpD,GACzEyB,MAAMC,QAAQuD,GAEdA,EAAItB,QAAQ,SAACC,GACT7C,EAAI1C,KAAKuF,KAGb7C,EAAI1C,KAAK4G,UAGVlE,IAGXlB,EAAS7C,UAAUuH,MAAQ,SAAU9F,EAAMqH,EAAIC,EAAQ1F,EAAMO,EAAQwC,OAC5DlD,KAAK2B,OAASiE,SAAa,EAC5BrH,EAAKmD,SAAS,0BACTL,YAAYyE,kBAAoB5C,EACrC3E,EAAOA,EAAKS,QAAQ,mBAAoB,sBAExCT,EAAKmD,SAAS,kBACTL,YAAY0E,UAAYrF,EAC7BnC,EAAOA,EAAKS,QAAQ,WAAY,cAEhCT,EAAKmD,SAAS,oBACTL,YAAY2E,YAAcH,EAC/BtH,EAAOA,EAAKS,QAAQ,aAAc,gBAElCT,EAAKmD,SAAS,gBACTL,YAAY4E,QAAUtG,EAAS8B,aAAatB,EAAKqC,OAAO,CAACqD,KAC9DtH,EAAOA,EAAKS,QAAQ,SAAU,YAE9BT,EAAK2H,MAAM,qBACN7E,YAAY8E,KAAOP,EACxBrH,EAAOA,EAAKS,QAAQ,cAAe,sBAG5BhC,EAAGQ,gBAAgBe,EAAMyB,KAAKqB,aACvC,MAAOhE,SAEL+I,QAAQC,IAAIhJ,GACN,IAAIqC,MAAM,aAAerC,EAAEiJ,QAAU,KAAO/H,KAO1DoB,EAAS4G,MAAQ,GAMjB5G,EAAS8B,aAAe,SAAU+E,WACxBlD,EAAIkD,EAASrB,EAAI7B,EAAErF,OACrB6F,EAAI,IACC5F,EAAI,EAAGA,EAAIiH,EAAGjH,IACb,oBAAqBgG,KAAKZ,EAAEpF,MAC9B4F,GAAM,YAAaI,KAAKZ,EAAEpF,IAAO,IAAMoF,EAAEpF,GAAK,IAAQ,KAAOoF,EAAEpF,GAAK,aAGrE4F,GAOXnE,EAASiD,UAAY,SAAUD,WACrBW,EAAIX,EAASwC,EAAI7B,EAAErF,OACrB6F,EAAI,GACC5F,EAAI,EAAGA,EAAIiH,EAAGjH,IACb,oBAAqBgG,KAAKZ,EAAEpF,MAC9B4F,GAAK,IAAMR,EAAEpF,GAAGjB,WACX+B,QAAQ,KAAM,MACdA,QAAQ,MAAO,cAGrB8E,GAOXnE,EAASkC,YAAc,SAAUpE,OACtB8I,EAAS5G,EAAT4G,SACHA,EAAM9I,UAAgB8I,EAAM9I,GAAM+E,aAChCiE,EAAO,GAoCP7E,EAnCanE,EAEduB,QACG,sGACA,QAIHA,QAAQ,yBAA0B,SAAU0H,EAAIC,SACtC,MAAQF,EAAKtI,KAAKwI,GAAM,GAAK,MAGvC3H,QAAQ,mBAAoB,SAAU0H,EAAIE,SAChC,KAAOA,EACT5H,QAAQ,MAAO,OACfA,QAAQ,KAAM,UACf,OAGPA,QAAQ,KAAM,OAEdA,QAAQ,0BAA2B,KAEnCA,QAAQ,OAAQ,KAEhBA,QAAQ,UAAW,KAEnBA,QAAQ,qBAAsB,SAAU0H,EAAIG,SAClC,IAAMA,EAAIjC,MAAM,IAAIkC,KAAK,KAAO,MAG1C9H,QAAQ,UAAW,QAEnBA,QAAQ,cAAe,IAEA4F,MAAM,KAAKmC,IAAI,SAAUC,OAC3Cd,EAAQc,EAAId,MAAM,iBAChBA,GAAUA,EAAM,GAAWO,EAAKP,EAAM,IAAjBc,WAEjCT,EAAM9I,GAAQmE,EACP2E,EAAM9I"}