{"version":3,"file":"index-umd.min.js","sources":["../src/jsonpath.js"],"sourcesContent":["/* eslint-disable no-eval */\r\n\r\nconst allowedResultTypes = ['value', 'path', 'pointer', 'parent', 'parentProperty', 'all'];\r\n\r\nconst moveToAnotherArray = function (source, target, conditionCb) {\r\n    const kl = source.length;\r\n    for (let i = 0; i < kl; i++) {\r\n        const key = source[i];\r\n        if (conditionCb(key)) {\r\n            target.push(source.splice(i--, 1)[0]);\r\n        }\r\n    }\r\n};\r\n\r\nconst vm = typeof module !== 'undefined'\r\n    ? require('vm') : {\r\n        runInNewContext (expr, context) {\r\n            const keys = Object.keys(context);\r\n            const funcs = [];\r\n            moveToAnotherArray(keys, funcs, (key) => {\r\n                return typeof context[key] === 'function';\r\n            });\r\n            const code = funcs.reduce(function (s, func) {\r\n                let fString = context[func].toString();\r\n                if (!(/function/).exec(fString)) {\r\n                    fString = 'function ' + fString;\r\n                }\r\n                return 'var ' + func + '=' + fString + ';' + s;\r\n            }, '') + keys.reduce(function (s, vr) {\r\n                return 'var ' + vr + '=' + JSON.stringify(context[vr]).replace(/\\u2028|\\u2029/g, function (m) {\r\n                    // http://www.thespanner.co.uk/2011/07/25/the-json-specification-is-now-wrong/\r\n                    return '\\\\u202' + (m === '\\u2028' ? '8' : '9');\r\n                }) + ';' + s;\r\n            }, expr);\r\n            return eval(code);\r\n        }\r\n    };\r\n\r\nfunction push (arr, elem) { arr = arr.slice(); arr.push(elem); return arr; }\r\nfunction unshift (elem, arr) { arr = arr.slice(); arr.unshift(elem); return arr; }\r\nfunction NewError (value) {\r\n    this.avoidNew = true;\r\n    this.value = value;\r\n    this.message = 'JSONPath should not be called with \"new\" (it prevents return of (unwrapped) scalar values)';\r\n}\r\n\r\nfunction JSONPath (opts, expr, obj, callback, otherTypeCallback) {\r\n    if (!(this instanceof JSONPath)) {\r\n        try {\r\n            return new JSONPath(opts, expr, obj, callback, otherTypeCallback);\r\n        } catch (e) {\r\n            if (!e.avoidNew) {\r\n                throw e;\r\n            }\r\n            return e.value;\r\n        }\r\n    }\r\n\r\n    if (typeof opts === 'string') {\r\n        otherTypeCallback = callback;\r\n        callback = obj;\r\n        obj = expr;\r\n        expr = opts;\r\n        opts = {};\r\n    }\r\n    opts = opts || {};\r\n    const objArgs = opts.hasOwnProperty('json') && opts.hasOwnProperty('path');\r\n    this.json = opts.json || obj;\r\n    this.path = opts.path || expr;\r\n    this.resultType = (opts.resultType && opts.resultType.toLowerCase()) || 'value';\r\n    this.flatten = opts.flatten || false;\r\n    this.wrap = opts.hasOwnProperty('wrap') ? opts.wrap : true;\r\n    this.sandbox = opts.sandbox || {};\r\n    this.preventEval = opts.preventEval || false;\r\n    this.parent = opts.parent || null;\r\n    this.parentProperty = opts.parentProperty || null;\r\n    this.callback = opts.callback || callback || null;\r\n    this.otherTypeCallback = opts.otherTypeCallback || otherTypeCallback || function () {\r\n        throw new Error('You must supply an otherTypeCallback callback option with the @other() operator.');\r\n    };\r\n\r\n    if (opts.autostart !== false) {\r\n        const ret = this.evaluate({\r\n            path: (objArgs ? opts.path : expr),\r\n            json: (objArgs ? opts.json : obj)\r\n        });\r\n        if (!ret || typeof ret !== 'object') {\r\n            throw new NewError(ret);\r\n        }\r\n        return ret;\r\n    }\r\n}\r\n\r\n// PUBLIC METHODS\r\nJSONPath.prototype.evaluate = function (expr, json, callback, otherTypeCallback) {\r\n    const self = this;\r\n    let currParent = this.parent,\r\n        currParentProperty = this.parentProperty;\r\n    let {flatten, wrap} = this;\r\n\r\n    this.currResultType = this.resultType;\r\n    this.currPreventEval = this.preventEval;\r\n    this.currSandbox = this.sandbox;\r\n    callback = callback || this.callback;\r\n    this.currOtherTypeCallback = otherTypeCallback || this.otherTypeCallback;\r\n\r\n    json = json || this.json;\r\n    expr = expr || this.path;\r\n    if (expr && typeof expr === 'object') {\r\n        if (!expr.path) {\r\n            throw new Error('You must supply a \"path\" property when providing an object argument to JSONPath.evaluate().');\r\n        }\r\n        json = expr.hasOwnProperty('json') ? expr.json : json;\r\n        flatten = expr.hasOwnProperty('flatten') ? expr.flatten : flatten;\r\n        this.currResultType = expr.hasOwnProperty('resultType') ? expr.resultType : this.currResultType;\r\n        this.currSandbox = expr.hasOwnProperty('sandbox') ? expr.sandbox : this.currSandbox;\r\n        wrap = expr.hasOwnProperty('wrap') ? expr.wrap : wrap;\r\n        this.currPreventEval = expr.hasOwnProperty('preventEval') ? expr.preventEval : this.currPreventEval;\r\n        callback = expr.hasOwnProperty('callback') ? expr.callback : callback;\r\n        this.currOtherTypeCallback = expr.hasOwnProperty('otherTypeCallback') ? expr.otherTypeCallback : this.currOtherTypeCallback;\r\n        currParent = expr.hasOwnProperty('parent') ? expr.parent : currParent;\r\n        currParentProperty = expr.hasOwnProperty('parentProperty') ? expr.parentProperty : currParentProperty;\r\n        expr = expr.path;\r\n    }\r\n    currParent = currParent || null;\r\n    currParentProperty = currParentProperty || null;\r\n\r\n    if (Array.isArray(expr)) {\r\n        expr = JSONPath.toPathString(expr);\r\n    }\r\n    if (!expr || !json || !allowedResultTypes.includes(this.currResultType)) {\r\n        return;\r\n    }\r\n    this._obj = json;\r\n\r\n    const exprList = JSONPath.toPathArray(expr);\r\n    if (exprList[0] === '$' && exprList.length > 1) { exprList.shift(); }\r\n    this._hasParentSelector = null;\r\n    const result = this\r\n        ._trace(exprList, json, ['$'], currParent, currParentProperty, callback)\r\n        .filter(function (ea) { return ea && !ea.isParentSelector; });\r\n\r\n    if (!result.length) { return wrap ? [] : undefined; }\r\n    if (result.length === 1 && !wrap && !Array.isArray(result[0].value)) {\r\n        return this._getPreferredOutput(result[0]);\r\n    }\r\n    return result.reduce(function (result, ea) {\r\n        const valOrPath = self._getPreferredOutput(ea);\r\n        if (flatten && Array.isArray(valOrPath)) {\r\n            result = result.concat(valOrPath);\r\n        } else {\r\n            result.push(valOrPath);\r\n        }\r\n        return result;\r\n    }, []);\r\n};\r\n\r\n// PRIVATE METHODS\r\n\r\nJSONPath.prototype._getPreferredOutput = function (ea) {\r\n    const resultType = this.currResultType;\r\n    switch (resultType) {\r\n    case 'all':\r\n        ea.path = typeof ea.path === 'string' ? ea.path : JSONPath.toPathString(ea.path);\r\n        return ea;\r\n    case 'value': case 'parent': case 'parentProperty':\r\n        return ea[resultType];\r\n    case 'path':\r\n        return JSONPath.toPathString(ea[resultType]);\r\n    case 'pointer':\r\n        return JSONPath.toPointer(ea.path);\r\n    }\r\n};\r\n\r\nJSONPath.prototype._handleCallback = function (fullRetObj, callback, type) {\r\n    if (callback) {\r\n        const preferredOutput = this._getPreferredOutput(fullRetObj);\r\n        fullRetObj.path = typeof fullRetObj.path === 'string' ? fullRetObj.path : JSONPath.toPathString(fullRetObj.path);\r\n        callback(preferredOutput, type, fullRetObj);\r\n    }\r\n};\r\n\r\nJSONPath.prototype._trace = function (expr, val, path, parent, parentPropName, callback, literalPriority) {\r\n    // No expr to follow? return path and value as the result of this trace branch\r\n    let retObj;\r\n    const self = this;\r\n    if (!expr.length) {\r\n        retObj = {path, value: val, parent, parentProperty: parentPropName};\r\n        this._handleCallback(retObj, callback, 'value');\r\n        return retObj;\r\n    }\r\n\r\n    const loc = expr[0], x = expr.slice(1);\r\n\r\n    // We need to gather the return value of recursive trace calls in order to\r\n    // do the parent sel computation.\r\n    const ret = [];\r\n    function retPush (elem) {\r\n        ret.push(elem);\r\n    }\r\n    function addRet (elems) {\r\n        if (Array.isArray(elems)) {\r\n            elems.forEach(retPush);\r\n        } else {\r\n            ret.push(elems);\r\n        }\r\n    }\r\n\r\n    if ((typeof loc !== 'string' || literalPriority) && val && Object.prototype.hasOwnProperty.call(val, loc)) { // simple case--directly follow property\r\n        addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback));\r\n    } else if (loc === '*') { // all child properties\r\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\r\n            addRet(self._trace(unshift(m, x), v, p, par, pr, cb, true));\r\n        });\r\n    } else if (loc === '..') { // all descendent parent properties\r\n        addRet(this._trace(x, val, path, parent, parentPropName, callback)); // Check remaining expression with val's immediate children\r\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\r\n            // We don't join m and x here because we only want parents, not scalar values\r\n            if (typeof v[m] === 'object') { // Keep going with recursive descent on val's object children\r\n                addRet(self._trace(unshift(l, x), v[m], push(p, m), v, m, cb));\r\n            }\r\n        });\r\n    // The parent sel computation is handled in the frame above using the\r\n    // ancestor object of val\r\n    } else if (loc === '^') {\r\n        // This is not a final endpoint, so we do not invoke the callback here\n        this._hasParentSelector = true;\n        return path.length ? {\r\n            path: path.slice(0, -1),\r\n            expr: x,\r\n            isParentSelector: true\r\n        } : [];\r\n    } else if (loc === '~') { // property name\r\n        retObj = {path: push(path, loc), value: parentPropName, parent: parent, parentProperty: null};\r\n        this._handleCallback(retObj, callback, 'property');\r\n        return retObj;\r\n    } else if (loc === '$') { // root only\r\n        addRet(this._trace(x, val, path, null, null, callback));\r\n    } else if (/^(-?[0-9]*):(-?[0-9]*):?([0-9]*)$/.test(loc)) { // [start:end:step]  Python slice syntax\r\n        addRet(this._slice(loc, x, val, path, parent, parentPropName, callback));\r\n    } else if (loc.indexOf('?(') === 0) { // [?(expr)] (filtering)\r\n        if (this.currPreventEval) {\r\n            throw new Error('Eval [?(expr)] prevented in JSONPath expression.');\r\n        }\r\n        this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, x, v, p, par, pr, cb) {\r\n            if (self._eval(l.replace(/^\\?\\((.*?)\\)$/, '$1'), v[m], m, p, par, pr)) {\r\n                addRet(self._trace(unshift(m, x), v, p, par, pr, cb));\r\n            }\r\n        });\r\n    } else if (loc[0] === '(') { // [(expr)] (dynamic property/index)\r\n        if (this.currPreventEval) {\r\n            throw new Error('Eval [(expr)] prevented in JSONPath expression.');\r\n        }\r\n        // As this will resolve to a property name (but we don't know it yet), property and parent information is relative to the parent of the property to which this expression will resolve\r\n        addRet(this._trace(unshift(this._eval(loc, val, path[path.length - 1], path.slice(0, -1), parent, parentPropName), x), val, path, parent, parentPropName, callback));\r\n    } else if (loc[0] === '@') { // value type: @boolean(), etc.\r\n        let addType = false;\r\n        const valueType = loc.slice(1, -2);\r\n        switch (valueType) {\r\n        case 'scalar':\r\n            if (!val || !(['object', 'function'].includes(typeof val))) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'boolean': case 'string': case 'undefined': case 'function':\r\n            if (typeof val === valueType) { // eslint-disable-line valid-typeof\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'number':\r\n            if (typeof val === valueType && isFinite(val)) { // eslint-disable-line valid-typeof\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'nonFinite':\r\n            if (typeof val === 'number' && !isFinite(val)) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'object':\r\n            if (val && typeof val === valueType) { // eslint-disable-line valid-typeof\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'array':\r\n            if (Array.isArray(val)) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'other':\r\n            addType = this.currOtherTypeCallback(val, path, parent, parentPropName);\r\n            break;\r\n        case 'integer':\r\n            if (val === +val && isFinite(val) && !(val % 1)) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        case 'null':\r\n            if (val === null) {\r\n                addType = true;\r\n            }\r\n            break;\r\n        }\r\n        if (addType) {\r\n            retObj = {path: path, value: val, parent: parent, parentProperty: parentPropName};\r\n            this._handleCallback(retObj, callback, 'value');\r\n            return retObj;\r\n        }\r\n    } else if (loc[0] === '`' && val && Object.prototype.hasOwnProperty.call(val, loc.slice(1))) { // `-escaped property\r\n        const locProp = loc.slice(1);\r\n        addRet(this._trace(x, val[locProp], push(path, locProp), val, locProp, callback, true));\r\n    } else if (loc.includes(',')) { // [name1,name2,...]\r\n        const parts = loc.split(',');\r\n        for (let i = 0; i < parts.length; i++) {\r\n            addRet(this._trace(unshift(parts[i], x), val, path, parent, parentPropName, callback));\r\n        }\r\n    } else if (!literalPriority && val && Object.prototype.hasOwnProperty.call(val, loc)) { // simple case--directly follow property\r\n        addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, true));\r\n    }\r\n\r\n    // We check the resulting values for parent selections. For parent\r\n    // selections we discard the value object and continue the trace with the\r\n    // current val object\n    if (this._hasParentSelector) {\n        for (let t = 0; t < ret.length; t++) {\n            const rett = ret[t];\r\n            if (rett.isParentSelector) {\n                const tmp = self._trace(rett.expr, val, rett.path, parent, parentPropName, callback);\r\n                if (Array.isArray(tmp)) {\r\n                    ret[t] = tmp[0];\r\n                    const tl = tmp.length;\r\n                    for (let tt = 1; tt < tl; tt++) {\r\n                        t++;\r\n                        ret.splice(t, 0, tmp[tt]);\r\n                    }\r\n                } else {\r\n                    ret[t] = tmp;\r\n                }\r\n            }\r\n        }\n    }\r\n    return ret;\r\n};\n\r\nJSONPath.prototype._walk = function (loc, expr, val, path, parent, parentPropName, callback, f) {\r\n    let i, n, m;\r\n    if (Array.isArray(val)) {\r\n        for (i = 0, n = val.length; i < n; i++) {\r\n            f(i, loc, expr, val, path, parent, parentPropName, callback);\r\n        }\r\n    } else if (typeof val === 'object') {\r\n        for (m in val) {\r\n            if (Object.prototype.hasOwnProperty.call(val, m)) {\r\n                f(m, loc, expr, val, path, parent, parentPropName, callback);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nJSONPath.prototype._slice = function (loc, expr, val, path, parent, parentPropName, callback) {\r\n    if (!Array.isArray(val)) { return; }\r\n    const len = val.length, parts = loc.split(':'),\r\n        step = (parts[2] && parseInt(parts[2], 10)) || 1;\r\n    let i,\r\n        start = (parts[0] && parseInt(parts[0], 10)) || 0,\r\n        end = (parts[1] && parseInt(parts[1], 10)) || len;\r\n    start = (start < 0) ? Math.max(0, start + len) : Math.min(len, start);\r\n    end = (end < 0) ? Math.max(0, end + len) : Math.min(len, end);\r\n    const ret = [];\r\n    for (i = start; i < end; i += step) {\r\n        const tmp = this._trace(unshift(i, expr), val, path, parent, parentPropName, callback);\r\n        if (Array.isArray(tmp)) {\r\n            tmp.forEach(function (t) {\r\n                ret.push(t);\r\n            });\r\n        } else {\r\n            ret.push(tmp);\r\n        }\r\n    }\r\n    return ret;\r\n};\r\n\r\nJSONPath.prototype._eval = function (code, _v, _vname, path, parent, parentPropName) {\r\n    if (!this._obj || !_v) { return false; }\r\n    if (code.includes('@parentProperty')) {\r\n        this.currSandbox._$_parentProperty = parentPropName;\r\n        code = code.replace(/@parentProperty/g, '_$_parentProperty');\r\n    }\r\n    if (code.includes('@parent')) {\r\n        this.currSandbox._$_parent = parent;\r\n        code = code.replace(/@parent/g, '_$_parent');\r\n    }\r\n    if (code.includes('@property')) {\r\n        this.currSandbox._$_property = _vname;\r\n        code = code.replace(/@property/g, '_$_property');\r\n    }\r\n    if (code.includes('@path')) {\r\n        this.currSandbox._$_path = JSONPath.toPathString(path.concat([_vname]));\r\n        code = code.replace(/@path/g, '_$_path');\r\n    }\r\n    if (code.match(/@([.\\s)[])/)) {\r\n        this.currSandbox._$_v = _v;\r\n        code = code.replace(/@([.\\s)[])/g, '_$_v$1');\r\n    }\r\n    try {\r\n        return vm.runInNewContext(code, this.currSandbox);\r\n    } catch (e) {\r\n        console.log(e);\r\n        throw new Error('jsonPath: ' + e.message + ': ' + code);\r\n    }\r\n};\r\n\r\n// PUBLIC CLASS PROPERTIES AND METHODS\r\n\r\n// Could store the cache object itself\r\nJSONPath.cache = {};\r\n\r\nJSONPath.toPathString = function (pathArr) {\r\n    const x = pathArr, n = x.length;\r\n    let p = '$';\r\n    for (let i = 1; i < n; i++) {\r\n        if (!(/^(~|\\^|@.*?\\(\\))$/).test(x[i])) {\r\n            p += (/^[0-9*]+$/).test(x[i]) ? ('[' + x[i] + ']') : (\"['\" + x[i] + \"']\");\r\n        }\r\n    }\r\n    return p;\r\n};\r\n\r\nJSONPath.toPointer = function (pointer) {\r\n    const x = pointer, n = x.length;\r\n    let p = '';\r\n    for (let i = 1; i < n; i++) {\r\n        if (!(/^(~|\\^|@.*?\\(\\))$/).test(x[i])) {\r\n            p += '/' + x[i].toString()\r\n                .replace(/~/g, '~0')\r\n                .replace(/\\//g, '~1');\r\n        }\r\n    }\r\n    return p;\r\n};\r\n\r\nJSONPath.toPathArray = function (expr) {\r\n    const {cache} = JSONPath;\r\n    if (cache[expr]) { return cache[expr].concat(); }\r\n    const subx = [];\r\n    const normalized = expr\r\n        // Properties\r\n        .replace(/@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\\(\\)/g, ';$&;')\r\n        // Parenthetical evaluations (filtering and otherwise), directly within brackets or single quotes\r\n        .replace(/[['](\\??\\(.*?\\))[\\]']/g, function ($0, $1) {\r\n            return '[#' + (subx.push($1) - 1) + ']';\r\n        })\r\n        // Escape periods and tildes within properties\r\n        .replace(/\\['([^'\\]]*)'\\]/g, function ($0, prop) {\r\n            return \"['\" + prop\r\n                .replace(/\\./g, '%@%')\r\n                .replace(/~/g, '%%@@%%') +\r\n                \"']\";\r\n        })\r\n        // Properties operator\r\n        .replace(/~/g, ';~;')\r\n        // Split by property boundaries\r\n        .replace(/'?\\.'?(?![^[]*\\])|\\['?/g, ';')\r\n        // Reinsert periods within properties\r\n        .replace(/%@%/g, '.')\r\n        // Reinsert tildes within properties\r\n        .replace(/%%@@%%/g, '~')\r\n        // Parent\r\n        .replace(/(?:;)?(\\^+)(?:;)?/g, function ($0, ups) {\r\n            return ';' + ups.split('').join(';') + ';';\r\n        })\r\n        // Descendents\r\n        .replace(/;;;|;;/g, ';..;')\r\n        // Remove trailing\r\n        .replace(/;$|'?\\]|'$/g, '');\r\n\r\n    const exprList = normalized.split(';').map(function (expr) {\r\n        const match = expr.match(/#([0-9]+)/);\r\n        return !match || !match[1] ? expr : subx[match[1]];\r\n    });\r\n    cache[expr] = exprList;\r\n    return cache[expr];\r\n};\r\n\r\nexport {JSONPath};\r\n"],"names":["allowedResultTypes","moveToAnotherArray","source","target","conditionCb","kl","length","i","push","splice","vm","module","require","runInNewContext","expr","context","keys","Object","funcs","key","code","reduce","s","func","fString","toString","exec","vr","JSON","stringify","replace","m","eval","arr","elem","slice","unshift","NewError","value","avoidNew","message","JSONPath","opts","obj","callback","otherTypeCallback","this","e","objArgs","hasOwnProperty","json","path","resultType","toLowerCase","flatten","wrap","sandbox","preventEval","parent","parentProperty","Error","autostart","ret","evaluate","_typeof","prototype","self","currParent","currParentProperty","currResultType","currPreventEval","currSandbox","currOtherTypeCallback","Array","isArray","toPathString","includes","_obj","exprList","toPathArray","shift","_hasParentSelector","result","_trace","filter","ea","isParentSelector","valOrPath","_getPreferredOutput","concat","undefined","toPointer","_handleCallback","fullRetObj","type","preferredOutput","val","parentPropName","literalPriority","retObj","loc","x","retPush","addRet","elems","forEach","call","_walk","l","v","p","par","pr","cb","test","_slice","indexOf","_eval","addType","valueType","isFinite","locProp","parts","split","t","rett","tmp","tl","tt","f","n","len","step","parseInt","start","end","Math","max","min","_v","_vname","_$_parentProperty","_$_parent","_$_property","_$_path","match","_$_v","console","log","cache","pathArr","pointer","subx","$0","$1","prop","ups","join","map"],"mappings":"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"}